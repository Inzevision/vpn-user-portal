CREATE TABLE IF NOT EXISTS authorizations (
    auth_key VARCHAR(255) NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    client_id VARCHAR(255) NOT NULL,
    scope VARCHAR(255) NOT NULL,
    auth_time VARCHAR(255) NOT NULL,
    UNIQUE(auth_key)
);
CREATE TABLE IF NOT EXISTS pdo_users (
    user_id VARCHAR(255) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at VARCHAR(255) NOT NULL,
    UNIQUE(user_id)
);
CREATE TABLE IF NOT EXISTS users(
  user_id VARCHAR(255) NOT NULL PRIMARY KEY UNIQUE,
  session_expires_at DATETIME NOT NULL,
  permission_list TEXT NOT NULL,
  is_disabled BOOLEAN NOT NULL
);
CREATE TABLE IF NOT EXISTS certificates(
  common_name VARCHAR(255) UNIQUE NOT NULL,
  display_name VARCHAR(255) NOT NULL,
  valid_from DATETIME NOT NULL,
  valid_to DATETIME NOT NULL,
  client_id VARCHAR(255) DEFAULT NULL,
  user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS connection_log(
  user_id VARCHAR(255) NOT NULL,
  common_name VARCHAR(255) NOT NULL,
  profile_id VARCHAR(255) NOT NULL,
  ip4 VARCHAR(255) NOT NULL,
  ip6 VARCHAR(255) NOT NULL,
  connected_at DATETIME NOT NULL,
  disconnected_at DATETIME DEFAULT NULL,
  bytes_transferred INTEGER DEFAULT NULL,
  client_lost BOOLEAN DEFAULT 0
);
CREATE TABLE IF NOT EXISTS system_messages(
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  type VARCHAR(255) NOT NULL DEFAULT "notification",
  message TINYTEXT NOT NULL,
  date_time DATETIME NOT NULL
);
CREATE TABLE IF NOT EXISTS user_messages(
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  type VARCHAR(255) NOT NULL DEFAULT "notification",
  message TINYTEXT NOT NULL,
  date_time DATETIME NOT NULL,
  user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);
